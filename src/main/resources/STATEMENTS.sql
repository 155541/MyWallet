CREATE TABLE IF NOT EXISTS APP_USER (

	ID BIGINT NOT NULL AUTO_INCREMENT,
	NAME VARCHAR(50) NOT NULL,
	EMAIL VARCHAR(50) NOT NULL,
	PASSWORD VARCHAR(100) NOT NULL,
	
	PRIMARY KEY (ID),
	UNIQUE(NAME),
	UNIQUE(EMAIL)

)ENGINE=InnoDB AUTO_INCREMENT=19 DEFAULT CHARSET=utf8;

CREATE TABLE IF NOT EXISTS APP_USER_ROLE (

	ID BIGINT NOT NULL AUTO_INCREMENT,
	TYPE VARCHAR(30) NOT NULL,
	PRIMARY KEY (ID),
	UNIQUE (TYPE)
);

CREATE TABLE IF NOT EXISTS LINK_APP_USER__ROLE (

	APP_USER_ID BIGINT NOT NULL,
	APP_USER_ROLE BIGINT NOT NULL,
	PRIMARY KEY (APP_USER_ID, APP_USER_ROLE),
	CONSTRAINT FK_LINK_USER FOREIGN KEY (APP_USER_ID) REFERENCES APP_USER(ID),
	CONSTRAINT FK_LINK_ROLE FOREIGN KEY (APP_USER_ROLE) REFERENCES APP_USER_ROLE(ID)
);


/* Populating ROLES & ADMIN */
INSERT INTO APP_USER_ROLE(type) VALUES ('USER');
INSERT INTO APP_USER_ROLE(type) VALUES ('ADMIN');
INSERT INTO APP_USER_ROLE(type) VALUES ('DBA');

INSERT INTO APP_USER(name, email, password)
VALUES ('deepdev','devrevlhope@xyz.com','$2a$10$4eqIF5s/ewJwHK1p8lqlFOEm2QIA0S8g6./Lok.pQxqcxaBZYChRm'); /* PASS: abc125 */
  
INSERT INTO LINK_APP_USER__ROLE (APP_USER_ID, APP_USER_ROLE)
  SELECT user.id, role.id FROM APP_USER user, APP_USER_ROLE role
  where user.name='deepdev' and role.type = 'ADMIN';


CREATE TABLE IF NOT EXISTS DIRECTORY(
	ID BIGINT NOT NULL PRIMARY KEY AUTO_INCREMENT,
	NAME VARCHAR(50) NOT NULL UNIQUE,
	ID_PARENT BIGINT,
	USER_OWNER BIGINT NOT NULL,
	
	CONSTRAINT FK_PARENT FOREIGN KEY (ID_PARENT) REFERENCES DIRECTORY(ID)
	ON DELETE CASCADE
	ON UPDATE CASCADE,
	CONSTRAINT FK_USER FOREIGN KEY (USER_OWNER) REFERENCES APP_USER(ID)
	ON DELETE CASCADE
	ON UPDATE CASCADE
)ENGINE=InnoDB AUTO_INCREMENT=19 DEFAULT CHARSET=utf8;

INSERT INTO DIRECTORY(NAME,ID_PARENT,USER_OWNER) 
VALUES ('HOME',null,(select u.ID from APP_USER u where u.NAME='deepdev'));

INSERT INTO DIRECTORY(NAME,ID_PARENT,USER_OWNER) 
VALUES ('SHARED',null,(select u.ID from APP_USER u where u.NAME='deepdev'));

CREATE TABLE IF NOT EXISTS ACCOUNT (
	
	ID BIGINT NOT NULL PRIMARY KEY AUTO_INCREMENT,
	NAME VARCHAR(50) NOT NULL UNIQUE,
	EMAIL VARCHAR(50),
	DESCRIPTION VARCHAR(100),
	_KEY VARCHAR(1000) NOT NULL UNIQUE, /* don't let me more bytes... check if there is any error while insert data */
	METADATA VARCHAR(100) NOT NULL,
	DIRECTORY_ID BIGINT NOT NULL,
	CREATION_DATE BIGINT NOT NULL,
	UPDATED_DATE BIGINT,

	CONSTRAINT FK_DIRECTORY FOREIGN KEY (DIRECTORY_ID) REFERENCES DIRECTORY(ID)
	ON DELETE CASCADE
	ON UPDATE CASCADE

)ENGINE=InnoDB AUTO_INCREMENT=19 DEFAULT CHARSET=utf8;

CREATE TABLE IF NOT EXISTS SHARED_ACCOUNT(

	ID BIGINT NOT NULL PRIMARY KEY AUTO_INCREMENT,
	ID_OWNER BIGINT NOT NULL,
	ID_USER_SHARED BIGINT NOT NULL,
	ID_ACCOUNT BIGINT NOT NULL,
	DATE_SHARING BIGINT NOT NULL,

	CONSTRAINT FK_SHARED_OWNER FOREIGN KEY (ID_OWNER) REFERENCES APP_USER (ID)
	ON DELETE CASCADE
	ON UPDATE CASCADE,
	CONSTRAINT FK_SHARED_USER FOREIGN KEY (ID_USER_SHARED) REFERENCES APP_USER (ID)
	ON DELETE CASCADE
	ON UPDATE CASCADE,
	CONSTRAINT FK_SHARED_ACCOUNT FOREIGN KEY (ID_ACCOUNT) REFERENCES ACCOUNT(ID)
	ON DELETE CASCADE
	ON UPDATE CASCADE,
	CONSTRAINT U_SHARED UNIQUE (ID_OWNER, ID_USER_SHARED, ID_ACCOUNT)
)ENGINE=InnoDB AUTO_INCREMENT=19 DEFAULT CHARSET=utf8;

CREATE TABLE IF NOT EXISTS LOG(

	ID BIGINT NOT NULL PRIMARY KEY AUTO_INCREMENT,
	STAMP INTEGER NOT NULL UNIQUE,
	DATE VARCHAR(50) NOT NULL,
	USER BIGINT NOT NULL,
	ACTION VARCHAR(10) NOT NULL,
	ACCOUNT_INVOLVED BIGINT NOT NULL,
	DIRECTORY_INVOLVED BIGINT NOT NULL,

	CONSTRAINT FK_LOG_USER FOREIGN KEY (USER) REFERENCES APP_USER(ID)
	ON DELETE CASCADE
	ON UPDATE CASCADE,
	CONSTRAINT FK_LOG_ACCOUNT FOREIGN KEY (ACCOUNT_INVOLVED) REFERENCES ACCOUNT(ID)
	ON DELETE CASCADE
	ON UPDATE CASCADE,
	CONSTRAINT FK_LOG_DIRECTORY FOREIGN KEY (DIRECTORY_INVOLVED) REFERENCES DIRECTORY(ID)
	ON UPDATE CASCADE
	ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS PERSISTENT_LOGINS (
    username VARCHAR(64) NOT NULL,
    series VARCHAR(64) NOT NULL,
    token VARCHAR(64) NOT NULL,
    last_used TIMESTAMP NOT NULL,
    PRIMARY KEY (series)
);